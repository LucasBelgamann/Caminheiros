DROP SCHEMA IF EXISTS railway;
CREATE SCHEMA IF NOT EXISTS railway;

CREATE TABLE railway.Users (
  id INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
  name TEXT NOT NULL,
  phone TEXT NOT NULL,
  email TEXT NOT NULL,
  password VARCHAR(255) NOT NULL DEFAULT '',
  role TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE railway.Groups (
  id INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
  name TEXT NOT NULL,
  description TEXT,
  studyDays VARCHAR(255),
  hour TEXT,
  modality VARCHAR(255),
  userId INTEGER,
  FOREIGN KEY (userId) REFERENCES railway.Users (id),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE railway.Meetings (
  id INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
  date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  groupId INTEGER,
  FOREIGN KEY (groupId) REFERENCES railway.Groups (id),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE railway.Warnings (
  id INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
  description TEXT,
  groupId INTEGER,
  FOREIGN KEY (groupId) REFERENCES railway.Groups (id),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE railway.Groups_has_users (
  groupId INTEGER,
  userId INTEGER,
  FOREIGN KEY (groupId) REFERENCES railway.Groups (id),
  FOREIGN KEY (userId) REFERENCES railway.Users (id)
);

CREATE TABLE railway.Meetings_has_users (
  meetingsId INTEGER,
  userId INTEGER,
  frequency BOOLEAN,
  FOREIGN KEY (userId) REFERENCES railway.Users (id),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE railway.PasswordResetTokens (
  id INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
  userId INTEGER,
  token VARCHAR(255) NOT NULL,
  expiration DATETIME NOT NULL,
  FOREIGN KEY (userId) REFERENCES railway.Users (id),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

